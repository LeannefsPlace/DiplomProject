spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/task_manager_db}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    coroutine:
      pool:
        size: 30
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: all
      properties:
        retry.backoff.ms: 1000
        max.in.flight.requests.per.connection: 1
    consumer:
      group-id: session-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.ivan.auth_service.kafka
        spring.json.use.type.headers: false
    listener:
      missing-topics-fatal: false
    admin:
      auto-create: true

app:
  kafka:
    topics:
      user-commands: user-commands
      user-results: user-results
      user-actions: user-actions
      session-commands: session-commands
      session-results: session-results
      session-actions: session-actions
server:
  port: 8090